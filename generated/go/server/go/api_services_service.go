/*
 * effx API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// ServicesApiService is a service that implents the logic for the ServicesApiServicer
// This service should implement the business logic for every endpoint for the ServicesApi API. 
// Include any external packages or services that will be required by this service.
type ServicesApiService struct {
}

// NewServicesApiService creates a default api service
func NewServicesApiService() ServicesApiServicer {
	return &ServicesApiService{}
}

// DetectedServicesPut - 
func (s *ServicesApiService) DetectedServicesPut(ctx context.Context, xEffxApiKey string, detectedServicesPayload DetectedServicesPayload) (ImplResponse, error) {
	// TODO - update DetectedServicesPut with the required logic for this service method.
	// Add api_services_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DetectedServicesPut method not implemented")
}

// GetServiceById - Info for a specific service
func (s *ServicesApiService) GetServiceById(ctx context.Context, xEffxApiKey string, serviceId string) (ImplResponse, error) {
	// TODO - update GetServiceById with the required logic for this service method.
	// Add api_services_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Service{}) or use other options such as http.Ok ...
	//return Response(200, Service{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetServiceById method not implemented")
}

// ServicesGet - 
func (s *ServicesApiService) ServicesGet(ctx context.Context, xEffxApiKey string, limit int32, offset int32) (ImplResponse, error) {
	// TODO - update ServicesGet with the required logic for this service method.
	// Add api_services_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, InlineResponse200{}) or use other options such as http.Ok ...
	//return Response(200, InlineResponse200{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ServicesGet method not implemented")
}

// ServicesPut - 
func (s *ServicesApiService) ServicesPut(ctx context.Context, xEffxApiKey string, serviceConfiguration ServiceConfiguration) (ImplResponse, error) {
	// TODO - update ServicesPut with the required logic for this service method.
	// Add api_services_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ServicesPut method not implemented")
}

