/*
 * effx API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// TeamsApiService is a service that implents the logic for the TeamsApiServicer
// This service should implement the business logic for every endpoint for the TeamsApi API. 
// Include any external packages or services that will be required by this service.
type TeamsApiService struct {
}

// NewTeamsApiService creates a default api service
func NewTeamsApiService() TeamsApiServicer {
	return &TeamsApiService{}
}

// GetTeamById - Info for a specific team
func (s *TeamsApiService) GetTeamById(ctx context.Context, xEffxApiKey string, teamId string) (ImplResponse, error) {
	// TODO - update GetTeamById with the required logic for this service method.
	// Add api_teams_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Team{}) or use other options such as http.Ok ...
	//return Response(200, Team{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTeamById method not implemented")
}

// TeamsGet - 
func (s *TeamsApiService) TeamsGet(ctx context.Context, xEffxApiKey string, limit int32, offset int32) (ImplResponse, error) {
	// TODO - update TeamsGet with the required logic for this service method.
	// Add api_teams_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, InlineResponse2001{}) or use other options such as http.Ok ...
	//return Response(200, InlineResponse2001{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("TeamsGet method not implemented")
}

// TeamsPut - 
func (s *TeamsApiService) TeamsPut(ctx context.Context, xEffxApiKey string, teamConfiguration TeamConfiguration) (ImplResponse, error) {
	// TODO - update TeamsPut with the required logic for this service method.
	// Add api_teams_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("TeamsPut method not implemented")
}

