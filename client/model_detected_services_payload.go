/*
 * effx API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DetectedServicesPayload struct for DetectedServicesPayload
type DetectedServicesPayload struct {
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	SourceName *string `json:"sourceName,omitempty"`
	Email *string `json:"email,omitempty"`
	OnCall *Link `json:"onCall,omitempty"`
	Chat *Link `json:"chat,omitempty"`
	IssueTracker *Link `json:"issueTracker,omitempty"`
	LinkGroups *[]LinkGroup `json:"linkGroups,omitempty"`
	Tags *map[string]string `json:"tags,omitempty"`
	// Attach metadata to resources like teams and services
	Annotations *map[string]string `json:"annotations,omitempty"`
}

// NewDetectedServicesPayload instantiates a new DetectedServicesPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetectedServicesPayload(name string, ) *DetectedServicesPayload {
	this := DetectedServicesPayload{}
	this.Name = name
	return &this
}

// NewDetectedServicesPayloadWithDefaults instantiates a new DetectedServicesPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetectedServicesPayloadWithDefaults() *DetectedServicesPayload {
	this := DetectedServicesPayload{}
	return &this
}

// GetName returns the Name field value
func (o *DetectedServicesPayload) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DetectedServicesPayload) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DetectedServicesPayload) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DetectedServicesPayload) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectedServicesPayload) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DetectedServicesPayload) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DetectedServicesPayload) SetDescription(v string) {
	o.Description = &v
}

// GetSourceName returns the SourceName field value if set, zero value otherwise.
func (o *DetectedServicesPayload) GetSourceName() string {
	if o == nil || o.SourceName == nil {
		var ret string
		return ret
	}
	return *o.SourceName
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectedServicesPayload) GetSourceNameOk() (*string, bool) {
	if o == nil || o.SourceName == nil {
		return nil, false
	}
	return o.SourceName, true
}

// HasSourceName returns a boolean if a field has been set.
func (o *DetectedServicesPayload) HasSourceName() bool {
	if o != nil && o.SourceName != nil {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given string and assigns it to the SourceName field.
func (o *DetectedServicesPayload) SetSourceName(v string) {
	o.SourceName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *DetectedServicesPayload) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectedServicesPayload) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *DetectedServicesPayload) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *DetectedServicesPayload) SetEmail(v string) {
	o.Email = &v
}

// GetOnCall returns the OnCall field value if set, zero value otherwise.
func (o *DetectedServicesPayload) GetOnCall() Link {
	if o == nil || o.OnCall == nil {
		var ret Link
		return ret
	}
	return *o.OnCall
}

// GetOnCallOk returns a tuple with the OnCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectedServicesPayload) GetOnCallOk() (*Link, bool) {
	if o == nil || o.OnCall == nil {
		return nil, false
	}
	return o.OnCall, true
}

// HasOnCall returns a boolean if a field has been set.
func (o *DetectedServicesPayload) HasOnCall() bool {
	if o != nil && o.OnCall != nil {
		return true
	}

	return false
}

// SetOnCall gets a reference to the given Link and assigns it to the OnCall field.
func (o *DetectedServicesPayload) SetOnCall(v Link) {
	o.OnCall = &v
}

// GetChat returns the Chat field value if set, zero value otherwise.
func (o *DetectedServicesPayload) GetChat() Link {
	if o == nil || o.Chat == nil {
		var ret Link
		return ret
	}
	return *o.Chat
}

// GetChatOk returns a tuple with the Chat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectedServicesPayload) GetChatOk() (*Link, bool) {
	if o == nil || o.Chat == nil {
		return nil, false
	}
	return o.Chat, true
}

// HasChat returns a boolean if a field has been set.
func (o *DetectedServicesPayload) HasChat() bool {
	if o != nil && o.Chat != nil {
		return true
	}

	return false
}

// SetChat gets a reference to the given Link and assigns it to the Chat field.
func (o *DetectedServicesPayload) SetChat(v Link) {
	o.Chat = &v
}

// GetIssueTracker returns the IssueTracker field value if set, zero value otherwise.
func (o *DetectedServicesPayload) GetIssueTracker() Link {
	if o == nil || o.IssueTracker == nil {
		var ret Link
		return ret
	}
	return *o.IssueTracker
}

// GetIssueTrackerOk returns a tuple with the IssueTracker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectedServicesPayload) GetIssueTrackerOk() (*Link, bool) {
	if o == nil || o.IssueTracker == nil {
		return nil, false
	}
	return o.IssueTracker, true
}

// HasIssueTracker returns a boolean if a field has been set.
func (o *DetectedServicesPayload) HasIssueTracker() bool {
	if o != nil && o.IssueTracker != nil {
		return true
	}

	return false
}

// SetIssueTracker gets a reference to the given Link and assigns it to the IssueTracker field.
func (o *DetectedServicesPayload) SetIssueTracker(v Link) {
	o.IssueTracker = &v
}

// GetLinkGroups returns the LinkGroups field value if set, zero value otherwise.
func (o *DetectedServicesPayload) GetLinkGroups() []LinkGroup {
	if o == nil || o.LinkGroups == nil {
		var ret []LinkGroup
		return ret
	}
	return *o.LinkGroups
}

// GetLinkGroupsOk returns a tuple with the LinkGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectedServicesPayload) GetLinkGroupsOk() (*[]LinkGroup, bool) {
	if o == nil || o.LinkGroups == nil {
		return nil, false
	}
	return o.LinkGroups, true
}

// HasLinkGroups returns a boolean if a field has been set.
func (o *DetectedServicesPayload) HasLinkGroups() bool {
	if o != nil && o.LinkGroups != nil {
		return true
	}

	return false
}

// SetLinkGroups gets a reference to the given []LinkGroup and assigns it to the LinkGroups field.
func (o *DetectedServicesPayload) SetLinkGroups(v []LinkGroup) {
	o.LinkGroups = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *DetectedServicesPayload) GetTags() map[string]string {
	if o == nil || o.Tags == nil {
		var ret map[string]string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectedServicesPayload) GetTagsOk() (*map[string]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *DetectedServicesPayload) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]string and assigns it to the Tags field.
func (o *DetectedServicesPayload) SetTags(v map[string]string) {
	o.Tags = &v
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *DetectedServicesPayload) GetAnnotations() map[string]string {
	if o == nil || o.Annotations == nil {
		var ret map[string]string
		return ret
	}
	return *o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetectedServicesPayload) GetAnnotationsOk() (*map[string]string, bool) {
	if o == nil || o.Annotations == nil {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *DetectedServicesPayload) HasAnnotations() bool {
	if o != nil && o.Annotations != nil {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given map[string]string and assigns it to the Annotations field.
func (o *DetectedServicesPayload) SetAnnotations(v map[string]string) {
	o.Annotations = &v
}

func (o DetectedServicesPayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.SourceName != nil {
		toSerialize["sourceName"] = o.SourceName
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.OnCall != nil {
		toSerialize["onCall"] = o.OnCall
	}
	if o.Chat != nil {
		toSerialize["chat"] = o.Chat
	}
	if o.IssueTracker != nil {
		toSerialize["issueTracker"] = o.IssueTracker
	}
	if o.LinkGroups != nil {
		toSerialize["linkGroups"] = o.LinkGroups
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Annotations != nil {
		toSerialize["annotations"] = o.Annotations
	}
	return json.Marshal(toSerialize)
}

type NullableDetectedServicesPayload struct {
	value *DetectedServicesPayload
	isSet bool
}

func (v NullableDetectedServicesPayload) Get() *DetectedServicesPayload {
	return v.value
}

func (v *NullableDetectedServicesPayload) Set(val *DetectedServicesPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableDetectedServicesPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableDetectedServicesPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetectedServicesPayload(val *DetectedServicesPayload) *NullableDetectedServicesPayload {
	return &NullableDetectedServicesPayload{value: val, isSet: true}
}

func (v NullableDetectedServicesPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetectedServicesPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


