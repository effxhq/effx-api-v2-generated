/*
 * effx API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServiceConfigurationSpec struct for ServiceConfigurationSpec
type ServiceConfigurationSpec struct {
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	Contact ContactInformation `json:"contact"`
	LinkGroups *[]LinkGroup `json:"linkGroups,omitempty"`
	Tags *map[string]string `json:"tags,omitempty"`
	// Attach metadata to resources like teams and services
	Annotations *map[string]string `json:"annotations,omitempty"`
	Dependencies *Dependencies `json:"dependencies,omitempty"`
}

// NewServiceConfigurationSpec instantiates a new ServiceConfigurationSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceConfigurationSpec(name string, contact ContactInformation, ) *ServiceConfigurationSpec {
	this := ServiceConfigurationSpec{}
	this.Name = name
	this.Contact = contact
	return &this
}

// NewServiceConfigurationSpecWithDefaults instantiates a new ServiceConfigurationSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceConfigurationSpecWithDefaults() *ServiceConfigurationSpec {
	this := ServiceConfigurationSpec{}
	return &this
}

// GetName returns the Name field value
func (o *ServiceConfigurationSpec) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceConfigurationSpec) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServiceConfigurationSpec) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServiceConfigurationSpec) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConfigurationSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceConfigurationSpec) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServiceConfigurationSpec) SetDescription(v string) {
	o.Description = &v
}

// GetContact returns the Contact field value
func (o *ServiceConfigurationSpec) GetContact() ContactInformation {
	if o == nil  {
		var ret ContactInformation
		return ret
	}

	return o.Contact
}

// GetContactOk returns a tuple with the Contact field value
// and a boolean to check if the value has been set.
func (o *ServiceConfigurationSpec) GetContactOk() (*ContactInformation, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Contact, true
}

// SetContact sets field value
func (o *ServiceConfigurationSpec) SetContact(v ContactInformation) {
	o.Contact = v
}

// GetLinkGroups returns the LinkGroups field value if set, zero value otherwise.
func (o *ServiceConfigurationSpec) GetLinkGroups() []LinkGroup {
	if o == nil || o.LinkGroups == nil {
		var ret []LinkGroup
		return ret
	}
	return *o.LinkGroups
}

// GetLinkGroupsOk returns a tuple with the LinkGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConfigurationSpec) GetLinkGroupsOk() (*[]LinkGroup, bool) {
	if o == nil || o.LinkGroups == nil {
		return nil, false
	}
	return o.LinkGroups, true
}

// HasLinkGroups returns a boolean if a field has been set.
func (o *ServiceConfigurationSpec) HasLinkGroups() bool {
	if o != nil && o.LinkGroups != nil {
		return true
	}

	return false
}

// SetLinkGroups gets a reference to the given []LinkGroup and assigns it to the LinkGroups field.
func (o *ServiceConfigurationSpec) SetLinkGroups(v []LinkGroup) {
	o.LinkGroups = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ServiceConfigurationSpec) GetTags() map[string]string {
	if o == nil || o.Tags == nil {
		var ret map[string]string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConfigurationSpec) GetTagsOk() (*map[string]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ServiceConfigurationSpec) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]string and assigns it to the Tags field.
func (o *ServiceConfigurationSpec) SetTags(v map[string]string) {
	o.Tags = &v
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *ServiceConfigurationSpec) GetAnnotations() map[string]string {
	if o == nil || o.Annotations == nil {
		var ret map[string]string
		return ret
	}
	return *o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConfigurationSpec) GetAnnotationsOk() (*map[string]string, bool) {
	if o == nil || o.Annotations == nil {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *ServiceConfigurationSpec) HasAnnotations() bool {
	if o != nil && o.Annotations != nil {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given map[string]string and assigns it to the Annotations field.
func (o *ServiceConfigurationSpec) SetAnnotations(v map[string]string) {
	o.Annotations = &v
}

// GetDependencies returns the Dependencies field value if set, zero value otherwise.
func (o *ServiceConfigurationSpec) GetDependencies() Dependencies {
	if o == nil || o.Dependencies == nil {
		var ret Dependencies
		return ret
	}
	return *o.Dependencies
}

// GetDependenciesOk returns a tuple with the Dependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceConfigurationSpec) GetDependenciesOk() (*Dependencies, bool) {
	if o == nil || o.Dependencies == nil {
		return nil, false
	}
	return o.Dependencies, true
}

// HasDependencies returns a boolean if a field has been set.
func (o *ServiceConfigurationSpec) HasDependencies() bool {
	if o != nil && o.Dependencies != nil {
		return true
	}

	return false
}

// SetDependencies gets a reference to the given Dependencies and assigns it to the Dependencies field.
func (o *ServiceConfigurationSpec) SetDependencies(v Dependencies) {
	o.Dependencies = &v
}

func (o ServiceConfigurationSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["contact"] = o.Contact
	}
	if o.LinkGroups != nil {
		toSerialize["linkGroups"] = o.LinkGroups
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Annotations != nil {
		toSerialize["annotations"] = o.Annotations
	}
	if o.Dependencies != nil {
		toSerialize["dependencies"] = o.Dependencies
	}
	return json.Marshal(toSerialize)
}

type NullableServiceConfigurationSpec struct {
	value *ServiceConfigurationSpec
	isSet bool
}

func (v NullableServiceConfigurationSpec) Get() *ServiceConfigurationSpec {
	return v.value
}

func (v *NullableServiceConfigurationSpec) Set(val *ServiceConfigurationSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceConfigurationSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceConfigurationSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceConfigurationSpec(val *ServiceConfigurationSpec) *NullableServiceConfigurationSpec {
	return &NullableServiceConfigurationSpec{value: val, isSet: true}
}

func (v NullableServiceConfigurationSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceConfigurationSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


